import {
  require_jsx_runtime
} from "./chunk-K3R7ZO6P.js";
import {
  require_react
} from "./chunk-L57YJLEW.js";
import {
  __commonJS
} from "./chunk-BUSYA2B4.js";

// node_modules/@sigmacomputing/plugin/dist/types.js
var require_types = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@sigmacomputing/plugin/package.json
var require_package = __commonJS({
  "node_modules/@sigmacomputing/plugin/package.json"(exports, module) {
    module.exports = {
      name: "@sigmacomputing/plugin",
      version: "1.0.5",
      description: "Sigma Computing Plugin Client API",
      license: "MIT",
      homepage: "https://github.com/sigmacomputing/plugin",
      main: "./dist/index.js",
      repository: {
        type: "git",
        url: "https://github.com/sigmacomputing/plugin.git"
      },
      bugs: {
        email: "support@sigmacomputing.com",
        url: "https://github.com/sigmacomputing/plugin/issues"
      },
      files: [
        "dist/*"
      ],
      typesVersions: {
        "*": {
          react: [
            "dist/react/index.d.ts"
          ]
        }
      },
      scripts: {
        clean: "rimraf dist tsconfig*.tsbuildinfo",
        build: "yarn clean && yarn tsc",
        "build:watch": "yarn build --watch",
        format: "prettier --write 'src/**/*.{ts,tsx}' 'jest.config.ts'",
        precommit: "lint-staged",
        prepublish: "yarn build",
        test: "jest --ci",
        "test:watch": "yarn test --watch",
        tsc: "ttsc --build tsconfig.build.json"
      },
      peerDependencies: {
        react: "^16.8.0 || ^17.0.0 || ^18.0.0",
        "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0"
      },
      devDependencies: {
        "@jest/types": "^27.5.1",
        "@types/jest": "^27.5.1",
        "@types/node": "^18.7.14",
        "@types/react": "^18.0.18",
        "@types/react-dom": "^18.0.6",
        jest: "^27.5.1",
        "jest-watch-typeahead": "^2.1.1",
        "lint-staged": "^13.0.3",
        prettier: "^2.7.1",
        "ts-jest": "^27.1.4",
        "ts-node": "^10.9.1",
        ttypescript: "^1.5.13",
        typescript: "^4.8.2",
        "typescript-transform-paths": "^3.3.1"
      }
    };
  }
});

// node_modules/@sigmacomputing/plugin/dist/client/initialize.js
var require_initialize = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/client/initialize.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.initialize = void 0;
    function initialize() {
      const pluginConfig = {
        config: {}
      };
      let subscribedInteractions = {};
      let subscribedWorkbookVars = {};
      const listeners = {};
      for (const [key, value] of new URL(document.location.toString()).searchParams.entries())
        pluginConfig[key] = JSON.parse(value);
      const listener = (e) => {
        emit(e.data.type, e.data.result, e.data.error);
      };
      window.addEventListener("message", listener, false);
      window.addEventListener("click", () => execPromise("wb:plugin:focus"));
      on("wb:plugin:config:update", (config) => {
        var _a;
        Object.assign(pluginConfig, config);
        emit("config", (_a = pluginConfig.config) !== null && _a !== void 0 ? _a : {});
      });
      void execPromise("wb:plugin:init", require_package().version).then((config) => {
        Object.assign(pluginConfig, config);
        emit("init", pluginConfig);
        emit("config", pluginConfig.config);
      });
      on("wb:plugin:variable:update", (updatedVariables) => {
        subscribedWorkbookVars = {};
        Object.assign(subscribedWorkbookVars, updatedVariables);
      });
      on("wb:plugin:selection:update", (updatedInteractions) => {
        subscribedInteractions = {};
        Object.assign(subscribedInteractions, updatedInteractions);
      });
      function on(event, listener2) {
        listeners[event] = listeners[event] || [];
        listeners[event].push(listener2);
      }
      function off(event, listener2) {
        if (listeners[event] == null)
          return;
        listeners[event] = listeners[event].filter((a) => a !== listener2);
      }
      function emit(event, ...args) {
        Object.values(listeners[event] || []).forEach((fn) => fn(...args));
      }
      function execPromise(event, ...args) {
        return new Promise((resolve, reject) => {
          var _a;
          const callback = (data, error) => {
            if (error)
              reject(error);
            else
              resolve(data);
            off(event, callback);
          };
          on(event, callback);
          window.parent.postMessage({ type: event, args, elementId: pluginConfig.id }, (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.wbOrigin) !== null && _a !== void 0 ? _a : "*");
        });
      }
      return {
        get sigmaEnv() {
          return pluginConfig.sigmaEnv;
        },
        get isScreenshot() {
          return pluginConfig.screenshot;
        },
        config: {
          // @ts-ignore
          getKey(key) {
            var _a;
            return (_a = pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.config) === null || _a === void 0 ? void 0 : _a[key];
          },
          get() {
            return pluginConfig.config;
          },
          set(partialConfig) {
            void execPromise("wb:plugin:config:update", partialConfig);
          },
          setKey(key, value) {
            void execPromise("wb:plugin:config:update", {
              [key]: value
            });
          },
          subscribe(listener2) {
            on("config", listener2);
            return () => off("config", listener2);
          },
          getVariable(id) {
            return subscribedWorkbookVars[id];
          },
          setVariable(id, ...values) {
            void execPromise("wb:plugin:variable:set", id, ...values);
          },
          getInteraction(id) {
            return subscribedInteractions[id];
          },
          setInteraction(id, elementId, selection) {
            void execPromise("wb:plugin:selection:set", id, elementId, selection);
          },
          configureEditorPanel(options) {
            void execPromise("wb:plugin:config:inspector", options);
          },
          setLoadingState(loadingState) {
            void execPromise("wb:plugin:config:loading-state", loadingState);
          },
          subscribeToWorkbookVariable(id, callback) {
            const setValues = (values) => {
              callback(values[id]);
            };
            on("wb:plugin:variable:update", setValues);
            return () => {
              off("wb:plugin:variable:update", setValues);
            };
          },
          subscribeToWorkbookInteraction(id, callback) {
            const setValues = (values) => {
              callback(values[id]);
            };
            on("wb:plugin:selection:update", setValues);
            return () => {
              off("wb:plugin:selection:update", setValues);
            };
          }
        },
        elements: {
          getElementColumns(id) {
            return execPromise("wb:plugin:element:columns:get", id);
          },
          subscribeToElementColumns(id, callback) {
            const eventName = `wb:plugin:element:${id}:columns`;
            on(eventName, callback);
            void execPromise("wb:plugin:element:subscribe:columns", id);
            return () => {
              off(eventName, callback);
              void execPromise("wb:plugin:element:unsubscribe:columns", id);
            };
          },
          subscribeToElementData(id, callback) {
            const eventName = `wb:plugin:element:${id}:data`;
            on(eventName, callback);
            void execPromise("wb:plugin:element:subscribe:data", id);
            return () => {
              off(eventName, callback);
              void execPromise("wb:plugin:element:unsubscribe:data", id);
            };
          }
        },
        destroy() {
          Object.keys(listeners).forEach((event) => delete listeners[event]);
          window.removeEventListener("message", listener, false);
        }
      };
    }
    exports.initialize = initialize;
  }
});

// node_modules/@sigmacomputing/plugin/dist/client.js
var require_client = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/client.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.client = void 0;
    var initialize_1 = require_initialize();
    exports.client = (0, initialize_1.initialize)();
  }
});

// node_modules/@sigmacomputing/plugin/dist/react/Context.js
var require_Context = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/react/Context.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PluginContext = void 0;
    var react_1 = require_react();
    var client_1 = require_client();
    exports.PluginContext = (0, react_1.createContext)(client_1.client);
  }
});

// node_modules/@sigmacomputing/plugin/dist/utils/deepEqual.js
var require_deepEqual = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/utils/deepEqual.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.deepEqual = void 0;
    function isObject(obj) {
      if (typeof obj === "object" && obj != null) {
        return true;
      } else {
        return false;
      }
    }
    function deepEqual(obj1, obj2) {
      if (obj1 === obj2) {
        return true;
      } else if (isObject(obj1) && isObject(obj2)) {
        if (Object.keys(obj1).length !== Object.keys(obj2).length) {
          return false;
        }
        for (const prop in obj1) {
          if (!deepEqual(obj1[prop], obj2[prop])) {
            return false;
          }
        }
        return true;
      }
    }
    exports.deepEqual = deepEqual;
  }
});

// node_modules/@sigmacomputing/plugin/dist/react/hooks.js
var require_hooks = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/react/hooks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useInteraction = exports.useVariable = exports.useConfig = exports.useElementData = exports.useElementColumns = exports.useLoadingState = exports.useEditorPanelConfig = exports.usePlugin = void 0;
    var react_1 = require_react();
    var Context_1 = require_Context();
    var deepEqual_1 = require_deepEqual();
    function usePlugin() {
      return (0, react_1.useContext)(Context_1.PluginContext);
    }
    exports.usePlugin = usePlugin;
    function useEditorPanelConfig(nextOptions) {
      const client = usePlugin();
      const optionsRef = (0, react_1.useRef)({});
      (0, react_1.useEffect)(() => {
        if (nextOptions == null)
          return;
        if (!(0, deepEqual_1.deepEqual)(nextOptions, optionsRef.current)) {
          client.config.configureEditorPanel(nextOptions);
          optionsRef.current = nextOptions;
        }
      }, [client, nextOptions]);
    }
    exports.useEditorPanelConfig = useEditorPanelConfig;
    function useLoadingState(initialState) {
      const client = usePlugin();
      const [loading, setLoading] = (0, react_1.useState)(() => {
        client.config.setLoadingState(initialState);
        return initialState;
      });
      return [
        loading,
        (nextState) => {
          if (nextState === loading)
            return;
          setLoading(nextState);
          client.config.setLoadingState(nextState);
        }
      ];
    }
    exports.useLoadingState = useLoadingState;
    function useElementColumns(id) {
      const client = usePlugin();
      const [columns, setColumns] = (0, react_1.useState)({});
      (0, react_1.useEffect)(() => {
        if (id) {
          return client.elements.subscribeToElementColumns(id, setColumns);
        }
      }, [client, id]);
      return columns;
    }
    exports.useElementColumns = useElementColumns;
    function useElementData(id) {
      const client = usePlugin();
      const [data, setData] = (0, react_1.useState)({});
      (0, react_1.useEffect)(() => {
        if (id) {
          return client.elements.subscribeToElementData(id, setData);
        }
      }, [client, id]);
      return data;
    }
    exports.useElementData = useElementData;
    function useConfig(key) {
      const client = usePlugin();
      const [config, setConfig] = (0, react_1.useState)(key != null ? client.config.getKey(key) : client.config.get());
      (0, react_1.useEffect)(() => client.config.subscribe((newConfig) => {
        if (key != null && newConfig[key] !== config[key]) {
          setConfig(newConfig[key]);
        } else {
          setConfig(newConfig);
        }
      }), [client]);
      return config;
    }
    exports.useConfig = useConfig;
    function useVariable(id) {
      const client = usePlugin();
      const [workbookVariable, setWorkbookVariable] = (0, react_1.useState)();
      (0, react_1.useEffect)(() => {
        return client.config.subscribeToWorkbookVariable(id, setWorkbookVariable);
      }, [client, id]);
      const setVariable = (0, react_1.useCallback)((...values) => client.config.setVariable(id, ...values), [id]);
      return [workbookVariable, setVariable];
    }
    exports.useVariable = useVariable;
    function useInteraction(id, elementId) {
      const client = usePlugin();
      const [workbookInteraction, setWorkbookInteraction] = (0, react_1.useState)();
      (0, react_1.useEffect)(() => {
        return client.config.subscribeToWorkbookInteraction(id, setWorkbookInteraction);
      }, [client, id]);
      const setInteraction = (0, react_1.useCallback)((value) => {
        client.config.setInteraction(id, elementId, value);
      }, [id]);
      return [workbookInteraction, setInteraction];
    }
    exports.useInteraction = useInteraction;
  }
});

// node_modules/@sigmacomputing/plugin/dist/react/Provider.js
var require_Provider = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/react/Provider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SigmaClientProvider = void 0;
    var jsx_runtime_1 = require_jsx_runtime();
    var Context_1 = require_Context();
    function SigmaClientProvider(props) {
      return (0, jsx_runtime_1.jsx)(Context_1.PluginContext.Provider, Object.assign({ value: props.client }, { children: props.children }));
    }
    exports.SigmaClientProvider = SigmaClientProvider;
  }
});

// node_modules/@sigmacomputing/plugin/dist/react.js
var require_react2 = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/react.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SigmaClientProvider = void 0;
    __exportStar(require_hooks(), exports);
    var Provider_1 = require_Provider();
    Object.defineProperty(exports, "SigmaClientProvider", { enumerable: true, get: function() {
      return Provider_1.SigmaClientProvider;
    } });
  }
});

// node_modules/@sigmacomputing/plugin/dist/utils/polyfillRequestAnimationFrame.js
var require_polyfillRequestAnimationFrame = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/utils/polyfillRequestAnimationFrame.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.polyfillRequestAnimationFrame = void 0;
    function polyfillRequestAnimationFrame(w) {
      if ("requestAnimationFrame" in w) {
        w.requestAnimationFrame = (cb) => w.setTimeout(cb, 1e3 / 60);
        w.cancelAnimationFrame = (id) => w.clearTimeout(id);
      }
    }
    exports.polyfillRequestAnimationFrame = polyfillRequestAnimationFrame;
  }
});

// node_modules/@sigmacomputing/plugin/dist/index.js
var require_dist = __commonJS({
  "node_modules/@sigmacomputing/plugin/dist/index.js"(exports) {
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.polyfillRequestAnimationFrame = void 0;
    __exportStar(require_types(), exports);
    __exportStar(require_react2(), exports);
    __exportStar(require_client(), exports);
    var polyfillRequestAnimationFrame_1 = require_polyfillRequestAnimationFrame();
    Object.defineProperty(exports, "polyfillRequestAnimationFrame", { enumerable: true, get: function() {
      return polyfillRequestAnimationFrame_1.polyfillRequestAnimationFrame;
    } });
  }
});
export default require_dist();
//# sourceMappingURL=@sigmacomputing_plugin.js.map
